#ifndef LEXER_H
#define LEXER_H

/**
 * Token types used in the lexical analysis phase
 */
typedef enum
{
	// Keywords
	TOKEN_SAY,
	TOKEN_KEEP,
	TOKEN_WHEN,

	// Symbols and literals
	TOKEN_LPAREN,
	TOKEN_RPAREN,
	TOKEN_STRING,
	TOKEN_SEMICOLON,
	TOKEN_NUMBER,
	TOKEN_BOOL,
	TOKEN_EQUAL,

	// Identifiers and misc
	TOKEN_IDENTIFIER,
	TOKEN_EOF,
	TOKEN_UNKNOWN
} TokenType;

/**
 * Token structure with type and value
 */
typedef struct
{
	TokenType type;
	char value[256];
} Token;

/**
 * List of tokens generated by the lexer
 */
typedef struct
{
	Token tokens[128];
	int count;
} TokenList;

/**
 * Lexical analysis function â€“ converts source code to a token list
 */
TokenList lex(const char *source);

#endif
